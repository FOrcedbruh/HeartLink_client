import type * as binding from "@rspack/binding";
import { type Resolve } from "./config";
type ResolveContext = {};
type ErrorWithDetail = Error & {
    details?: string;
};
type ResolveOptionsWithDependencyType = Resolve & {
    dependencyCategory?: string;
    resolveToContext?: boolean;
};
export declare class Resolver {
    binding: binding.JsResolver;
    constructor(binding: binding.JsResolver);
    resolveSync(context: object, path: string, request: string): string | false;
    resolve(context: object, path: string, request: string, resolveContext: ResolveContext, callback: (err: null | ErrorWithDetail, res?: string | false) => void): void;
    withOptions({ dependencyCategory, resolveToContext, ...resolve }: ResolveOptionsWithDependencyType): Resolver;
}
export {};
