"use strict";
var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {
    if (kind === "m") throw new TypeError("Private method is not writable");
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a setter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot write private member to an object whose class did not declare it");
    return (kind === "a" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;
};
var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {
    if (kind === "a" && !f) throw new TypeError("Private accessor was defined without a getter");
    if (typeof state === "function" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError("Cannot read private member from an object whose class did not declare it");
    return kind === "m" ? f : kind === "a" ? f.call(receiver) : f ? f.value : state.get(receiver);
};
var _Module_inner, _Module_originalSource, _CodeGenerationResult_inner;
Object.defineProperty(exports, "__esModule", { value: true });
exports.CodeGenerationResults = exports.CodeGenerationResult = exports.Module = void 0;
const DependenciesBlock_1 = require("./DependenciesBlock");
const source_1 = require("./util/source");
class Module {
    static __from_binding(module, compilation) {
        return new Module(module, compilation);
    }
    constructor(module, compilation) {
        _Module_inner.set(this, void 0);
        _Module_originalSource.set(this, void 0);
        __classPrivateFieldSet(this, _Module_inner, module, "f");
        this.type = module.type;
        this.layer = module.layer ?? null;
        this.context = module.context;
        this.resource = module.resource;
        this.request = module.request;
        this.userRequest = module.userRequest;
        this.rawRequest = module.rawRequest;
        this.factoryMeta = module.factoryMeta;
        const customModule = compilation?.__internal__getCustomModule(module.moduleIdentifier);
        this.buildInfo = customModule?.buildInfo || {};
        this.buildMeta = customModule?.buildMeta || {};
    }
    originalSource() {
        if (__classPrivateFieldGet(this, _Module_originalSource, "f"))
            return __classPrivateFieldGet(this, _Module_originalSource, "f");
        if (__classPrivateFieldGet(this, _Module_inner, "f").originalSource) {
            __classPrivateFieldSet(this, _Module_originalSource, source_1.JsSource.__from_binding(__classPrivateFieldGet(this, _Module_inner, "f").originalSource), "f");
            return __classPrivateFieldGet(this, _Module_originalSource, "f");
        }
        return null;
    }
    identifier() {
        return __classPrivateFieldGet(this, _Module_inner, "f").moduleIdentifier;
    }
    nameForCondition() {
        if (typeof __classPrivateFieldGet(this, _Module_inner, "f").nameForCondition === "string") {
            return __classPrivateFieldGet(this, _Module_inner, "f").nameForCondition;
        }
        return null;
    }
    get blocks() {
        if ("blocks" in __classPrivateFieldGet(this, _Module_inner, "f")) {
            return __classPrivateFieldGet(this, _Module_inner, "f").blocks.map(b => new DependenciesBlock_1.DependenciesBlock(b));
        }
        return [];
    }
    size(type) {
        if ("size" in __classPrivateFieldGet(this, _Module_inner, "f")) {
            return __classPrivateFieldGet(this, _Module_inner, "f").size(type);
        }
        return 0;
    }
}
exports.Module = Module;
_Module_inner = new WeakMap(), _Module_originalSource = new WeakMap();
class CodeGenerationResult {
    constructor(result) {
        _CodeGenerationResult_inner.set(this, void 0);
        __classPrivateFieldSet(this, _CodeGenerationResult_inner, result, "f");
    }
    get(sourceType) {
        return __classPrivateFieldGet(this, _CodeGenerationResult_inner, "f").sources[sourceType];
    }
}
exports.CodeGenerationResult = CodeGenerationResult;
_CodeGenerationResult_inner = new WeakMap();
class CodeGenerationResults {
}
exports.CodeGenerationResults = CodeGenerationResults;
